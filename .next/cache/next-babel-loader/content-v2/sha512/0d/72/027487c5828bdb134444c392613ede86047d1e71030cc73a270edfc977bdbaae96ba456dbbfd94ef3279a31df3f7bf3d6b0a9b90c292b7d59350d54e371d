{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brayan\\\\Desktop\\\\NLW#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const ExperienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperiencelevel));\n    Cookies.set('chalenges', String(level));\n  }, [level, currentExperience, setCurrentExperience]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play;\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: `Valendo ${challenge.amount}xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperiene = currentExperience + amount;\n\n    if (finalExperiene >= ExperienceToNextLevel) {\n      finalExperiene = finalExperiene - ExperienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperiene);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      ExperienceToNextLevel,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Brayan/Desktop/NLW#4/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","ExperienceToNextLevel","Math","pow","Notification","requestPermission","set","String","currentExperiencelevel","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperiene"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport challenges from '../../challenges.json'\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\ninterface ChallengesContextData {\r\n            level: number;         \r\n            currentExperience: number;\r\n            ExperienceToNextLevel: number;\r\n            challengesCompleted: number;\r\n            activeChallenge: Challenge;\r\n            levelUp: () => void;\r\n            startNewChallenge: () => void;\r\n            resetChallenge: () => void;\r\n            completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider({children}: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    const ExperienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n  \r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperiencelevel));\r\n        Cookies.set('chalenges', String(level));\r\n\r\n    }, [level, currentExperience, setCurrentExperience]);\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor (Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        new Audio('/notification.mp3').play\r\n\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio',{\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        } \r\n        \r\n        const { amount} = activeChallenge;\r\n\r\n        let finalExperiene = currentExperience + amount;\r\n\r\n        if (finalExperiene >= ExperienceToNextLevel) {\r\n            finalExperiene = finalExperiene - ExperienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperiene);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n \r\n    return(\r\n        <ChallengesContext.Provider \r\n        value={{\r\n            level,         \r\n            currentExperience,\r\n            ExperienceToNextLevel,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            \r\n            }}>\r\n            {children}   \r\n        </ChallengesContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}