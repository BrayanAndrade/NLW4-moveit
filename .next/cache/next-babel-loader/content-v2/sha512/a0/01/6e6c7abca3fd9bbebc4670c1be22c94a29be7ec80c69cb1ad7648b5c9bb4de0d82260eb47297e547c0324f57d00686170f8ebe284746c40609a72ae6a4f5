{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brayan\\\\Desktop\\\\NLW#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var ExperienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set();\n  }, [level, currentExperience, setCurrentExperience]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play;\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperiene = currentExperience + amount;\n\n    if (finalExperiene >= ExperienceToNextLevel) {\n      finalExperiene = finalExperiene - ExperienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperiene);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      ExperienceToNextLevel: ExperienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"POCod5lVJzLDZnxgMknXr3PjRHI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/Brayan/Desktop/NLW#4/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","ExperienceToNextLevel","Math","pow","Notification","requestPermission","set","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperiene"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport challenges from '../../challenges.json'\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\ninterface ChallengesContextData {\r\n            level: number;         \r\n            currentExperience: number;\r\n            ExperienceToNextLevel: number;\r\n            challengesCompleted: number;\r\n            activeChallenge: Challenge;\r\n            levelUp: () => void;\r\n            startNewChallenge: () => void;\r\n            resetChallenge: () => void;\r\n            completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider({children}: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    const ExperienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n  \r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n        Cookies.set()\r\n\r\n    }, [level, currentExperience, setCurrentExperience]);\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor (Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        new Audio('/notification.mp3').play\r\n\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio',{\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        } \r\n        \r\n        const { amount} = activeChallenge;\r\n\r\n        let finalExperiene = currentExperience + amount;\r\n\r\n        if (finalExperiene >= ExperienceToNextLevel) {\r\n            finalExperiene = finalExperiene - ExperienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperiene);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n \r\n    return(\r\n        <ChallengesContext.Provider \r\n        value={{\r\n            level,         \r\n            currentExperience,\r\n            ExperienceToNextLevel,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            \r\n            }}>\r\n            {children}   \r\n        </ChallengesContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}