{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Brayan/Desktop/NLW#4/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/Brayan/Desktop/NLW#4/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brayan\\\\Desktop\\\\NLW#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _ref2,\n      _ref3 = _slicedToArray(_ref2, 1),\n      isLevel = _ref3[0];\n\n  var ExperienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, setCurrentExperience]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play;\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperiene = currentExperience + amount;\n\n    if (finalExperiene >= ExperienceToNextLevel) {\n      finalExperiene = finalExperiene - ExperienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperiene);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      ExperienceToNextLevel: ExperienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"rRgkk49nHdmxiilpCV+wZetkgvA=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/Brayan/Desktop/NLW#4/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevel","ExperienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperiene"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect} from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport challenges from '../../challenges.json'\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\ninterface ChallengesContextData {\r\n            level: number;         \r\n            currentExperience: number;\r\n            ExperienceToNextLevel: number;\r\n            challengesCompleted: number;\r\n            activeChallenge: Challenge;\r\n            levelUp: () => void;\r\n            startNewChallenge: () => void;\r\n            resetChallenge: () => void;\r\n            completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\n\r\n\r\nexport function ChallengesProvider({\r\n    children, \r\n    ...rest\r\n    }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0)\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n    const [isLevel]\r\n\r\n    const ExperienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n  \r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n\r\n    }, [level, currentExperience, setCurrentExperience]);\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor (Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        new Audio('/notification.mp3').play\r\n\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio',{\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        } \r\n        \r\n        const { amount} = activeChallenge;\r\n\r\n        let finalExperiene = currentExperience + amount;\r\n\r\n        if (finalExperiene >= ExperienceToNextLevel) {\r\n            finalExperiene = finalExperiene - ExperienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperiene);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n \r\n    return(\r\n        <ChallengesContext.Provider \r\n        value={{\r\n            level,         \r\n            currentExperience,\r\n            ExperienceToNextLevel,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            \r\n            }}>\r\n            {children}   \r\n\r\n            <LevelUpModal />\r\n        </ChallengesContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}