{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brayan\\\\Desktop\\\\NLW#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = MathMath.random() * challenges.length;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Brayan/Desktop/NLW#4/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge","randomChallengeIndex","MathMath","random","length"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAkD,OAAlD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAcP,OAAO,SAASI,kBAAT,CAA4B;AAACC,EAAAA;AAAD,CAA5B,EAAiE;AACpE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;;AAIA,WAASW,OAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASO,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGC,QAAQ,CAACC,MAAT,KAAoBd,UAAU,CAACe,MAA5D;AACH;;AAGD,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHX,MAAAA,KADG;AAEHE,MAAAA,iBAFG;AAGHE,MAAAA,mBAHG;AAIHE,MAAAA,OAJG;AAKHC,MAAAA;AALG,KADP;AAAA,cASKR;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH","sourcesContent":["import { createContext, useState, ReactNode} from 'react';\r\nimport challenges from '../../challenges.json'\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\ninterface ChallengesContextData {\r\n            level: number;         \r\n            currentExperience: number;\r\n            challengesCompleted: number;\r\n            levelUp: () => void;\r\n            startNewChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider({children}: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\r\n  \r\n\r\n  \r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = MathMath.random() * challenges.length\r\n    }\r\n\r\n \r\n    return(\r\n        <ChallengesContext.Provider \r\n        value={{\r\n            level,         \r\n            currentExperience,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            \r\n            }}>\r\n            {children}   \r\n        </ChallengesContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}